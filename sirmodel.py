# -*- coding: utf-8 -*-
"""SIRmodel.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1spEGOEhuIrgd1HO-O9kr4aVx4PihR1t5
"""

import random
import numpy as np

# グローバル変数（環境変数の設定）
action_radius1 = 50
action_radius2 = 50
initial_infected = 0.3
population = 100
max_contact = 15

def around_radius(me, another):
  return (np.sqrt((me.x-another.x)**2 + (me.y-another.y)**2))

class Walker():
  def __init__(self, id, group):
    self.id = id
    self.counter = 0
    self.x = random.randint(0, 50)
    self.y = random.randint(0, 50)
    if group == 1:
      self.aciton_radius = action_radius1
    else:
      self.action_radius = action_radius2
    self.condition = 0
    self.direction = random.rand()*360
    self.in_hospital = 0
    self.death_rate = 0.2
    self.is_serious = 0

class Agt_Step():
  def __init__(self, walker_list, id):
    self.walker_list = walker_list
    self.id = id
    self.me = walker_list[id]

  def MakeAllAgeSetAroundOwn(self):
    neighbor_list = []
    for agt in self.walker_list:
      if agt.id == self.id:
        continue
      if around_radius(self.me, agt) <= action_radius1:
        neighbor_list.append(agt)
      return (neighbor_list)

  def TouchAgt(self, neighbor_list):
    touch_list = []
    for i in range(max_contact):
      if (len(neighbor_list)) == 0:
        break
      r = random.randint(0, len(neighbor_list)-1)
      one = neighbor_list[r]
      touch_list.append(one)
      del neighbor_list[r]
      return (touch_list)


# agentの集合リスト
walker_list = []

for i in range(population):
  walker_list.append(Walker(i, 1))